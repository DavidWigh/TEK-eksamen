boolean deathscreen = true;
boolean menuscreen = false;

int score = int(random(1,2000));
int highScore = int(random(2000,3000));
int niveau = 0;
int test = 0;
int spilValg=0;


void setup(){
  size(800,1000);
  frameRate(60);
}

void draw(){
  background(0);
  
  if(deathscreen == true){
    textSize(32);
    text("Highscore:",50,50);
    text("Score:",50,100);
    text(""+highScore,250,50);
    text(""+score,250,100);
    text("Game Over",325,500);
    text("Tryk på en vilkårlig tast for at starte forfra",75,550);
    fill(255);
    if(keyPressed == true||mousePressed==true){
      deathscreen = false;
      fill(0);
      rect(0,0,800,1000);
      menuscreen = true;
      mouseX=0;
      mouseY=0;
    }
  }
  
  if(menuscreen==true){
    fill(0);
    stroke(255);
    rect(30,64,415,44);
    rect(30,128,415,44);
    rect(30,192,415,44);
    rect(30,256,415,44);
    rect(30,320,415,44);
    
    fill(0);
    stroke(255);
    rect(30,457,415,44);
    rect(30,521,415,44);
    rect(30,585,415,44);
    
    fill(0);
    stroke(255);
    rect(320,768,148,44);
    
    if(spilValg==1){
      fill(0);
      stroke(255,0,0);
      rect(30,64,415,44);
    }
    if(spilValg==2){
      fill(0);
      stroke(255,0,0);
      rect(30,128,415,44);
    }
    if(spilValg==3){
      fill(0);
      stroke(255,0,0);
      rect(30,192,415,44);
    }
    if(spilValg==4){
      fill(0);
      stroke(255,0,0);
      rect(30,256,415,44);
    }
    if(spilValg==5){
      fill(0);
      stroke(255,0,0);
      rect(30,320,415,44);
    }
    if(niveau==1){
      fill(0);
      stroke(255,0,0);
      rect(30,457,415,44);
    }
    if(niveau==2){
      fill(0);
      stroke(255,0,0);
      rect(30,521,415,44);
    }
    if(niveau==3){
      fill(0);
      stroke(255,0,0);
      rect(30,585,415,44);
    }
    
    fill(255);
    textSize(32);
    text("Startmenu",10,32);
    text("multiplikation",35,96);
    text("division",35,160);
    text("addition og subtrahering",35,224);
    text("brøker og decimalregning",35,288);
    text("geometri",35,352);
    text("Sværhedsgrad",10,425);
    text("let",35,489);
    text("medium",35,553);
    text("svær",35,617);
    text("start spil",325,800);
  }
  
  if(deathscreen == false && menuscreen == false){
 
  
    if(test == 0){
      String[] rr = brokFunktion();
      print(""+rr[0]+" "+rr[1]);
   }
    test = 1;
  }
}


void mouseClicked(){
  if(mouseX>30&&mouseX<445&&mouseY>64&&mouseY<108){
    spilValg=1;
  }
  if(mouseX>30&&mouseX<445&&mouseY>128&&mouseY<172){
    spilValg=2;
  }
  if(mouseX>30&&mouseX<445&&mouseY>192&&mouseY<236){
    spilValg=3;
  }
  if(mouseX>30&&mouseX<445&&mouseY>256&&mouseY<300){
    spilValg=4;
  }
  if(mouseX>30&&mouseX<445&&mouseY>320&&mouseY<364){
    spilValg=5;
  }
  if(mouseX>30&&mouseX<445&&mouseY>457&&mouseY<501){
    niveau=1;
  }
  if(mouseX>30&&mouseX<445&&mouseY>521&&mouseY<565){
    niveau=2;
  }
  if(mouseX>30&&mouseX<445&&mouseY>585&&mouseY<629){
    niveau=3;
  }
  if(mouseX>320&&mouseX<468&&mouseY>768&&mouseY<812&&niveau>0&&spilValg>0){
    menuscreen=false;
    fill(0);
    rect(0,0,800,1000);
  }
  
}


//===========================================Funktioner og klasser=================================================



String[] pmgdFunktion (String pmgd){
  int a = 1;
  int b = 0;
  int c = 3;
  String result = "";
  String regnestykke = "";
  
  if(niveau == 1){
    a = int(random(0,10));
    b = int(random(0,10));
    while(a%c != 0){
      c = int(random(1,10));
    }
  }else if(niveau == 2){
    a = int(random(10,100));
    b = int(random(10,100));
    while(a%c != 0){
      c = int(random(1,10));
    }
  }else if(niveau == 3){
    a = int(random(100,1000));
    b = int(random(100,1000));
    while(a%c != 0){
      c = int(random(1,10));
    }
  }
  
  if(pmgd=="+"){
    result = ""+(a+b);
    regnestykke = ""+a+"+"+b;
  }else if(pmgd=="-"){
    result = ""+(a-b);
    regnestykke = ""+a+"-"+b;
  }else if(pmgd=="*"){
    result = ""+(a*c);
    regnestykke = ""+a+"*"+c;
  }else if(pmgd=="/"){
    result = ""+(a/c);
    regnestykke = ""+a+"/"+c;
  }else{
    print("fejl i pmgd");
  }
  String[] rOgR = {""+regnestykke,""+result};
  
  return(rOgR);
}




String[] geometriFunktion (){
  int a = floor(random(0,4.9));
  String regnestykke ="";
  String result ="";
  String altResult ="";
  
  if(niveau == 1){
    if(a == 0){
      regnestykke = "Areal af kvadreat med siderne L";
      result = "L*L";
      altResult = "L*L";
    }else if(a == 1){
      regnestykke = "Omkreds af kvadrat med siderne L";
      result = "L*4";
      altResult = "L+L+L+L";
    }else if(a == 2){
      regnestykke = "Areal af rektangel med siderne L og B";
      result = "L*B";
      altResult = "B*L";
    }else if(a == 3){
      regnestykke = "Omkreds af rektangel med siderne L og B";
      result = "L+L+B+B";
      altResult = "L*2+B*2";
    }else if(a == 4){
      regnestykke = "Omkreds af trekant med siderne a, b og c";
      result = "a+b+c";
      altResult = "c+b+a";
    }
  }else if(niveau == 2){
    if(a == 0){
      regnestykke = "Omkreds af cirkel med radiusen r";
      result = "pi*r*2";
      altResult = "2*r*pi";
    }else if(a == 1){
      regnestykke = "Areal af cirkel med radiusen r";
      result = "pi*r^2";
      altResult = "r^2*pi";
    }else if(a == 2){
      regnestykke = "Rumfang af cylinder med radiusen r og højden h";
      result = "pi*r^2*h";
      altResult = "h*r^2+pi";
    }else if(a == 3){
      regnestykke = "Hvad kaldes de to typer af sider i en retvinklet trekant";
      result = "katete og hypotenuse";
      altResult = "hypotenuse og katete";
    }else if(a == 4){
      regnestykke = "Hvad kaldes en streg der går fra periferi til periferi, men ikke igennem centrum";
      result = "Korde";
      altResult = "korde";
    }
  }else if(niveau == 3){
    if(a == 0){
      regnestykke = "Pythageoras med siderne a, b og c";
      result = "a^2+b^2+c^2";
      altResult = "c^2+b^2+a^2";
    }else if(a == 1){
      regnestykke = "Rumfrang af kegle med radiusen r og højden h";
      result = "pi*r^2*h*1/3";
      altResult = "pi*r^2*h/3";
    }else if(a == 2){
      regnestykke = "Areal af den krumme overflade på en kegle med radiusen r og sidelængden s";
      result = "pi*r*s";
      altResult = "s*r*pi";
    }else if(a == 3){
      regnestykke = "V=x, hos=y, hyp=z, havd er mod?";
      result = "mod=sin(x)*y";
      altResult = "sin(x)*y";
    }else if(a == 4){
      regnestykke = "hvilke tre variabler bruges enhedscirklen til at skaffe";
      result = "cos, sin og tan";
      altResult = "cos sin tan";
    }
  }
  
  String[] rOgR = {""+regnestykke,""+result,""+altResult};
  return(rOgR);
}





String[] brokFunktion (){
  String regnestykke ="";
  String result ="";
  int a = 1 ;
  int b;
  int c = 3;
  int d;
  int e;
  
  if(niveau == 1){
    a = int(random(1,10));
    b = int(random(1,a));
    c = int(random(1,10));
    d = floor(random(1,1.9));
    if(d == 0){
      regnestykke = ""+b+"/"+a;
      result = ""+b/a;
    }else if(d == 1){
      regnestykke = ""+b+"/"+a+"*"+c;
      result = ""+(b*c)+"/"+a;
    }
  }else if(niveau == 2){
    a = int(random(1,10));
    b = int(random(1,a));
    if(b%c != 0){
      c = int(random(1,a));
    }
    d = floor(random(1,1.9));
    if(d == 0){
      regnestykke = ""+b/a;
      result = ""+b+"/"+a;
    }else if(d == 1){
      regnestykke = ""+b+"/"+a+"*"+c;
      result = ""+(b/c)+"/"+a;
    }
  }else if(niveau == 3){
    a = int(random(1,10));
    b = int(random(1,a));
    c = int(random(1,10));
    d = int(random(1,c));
    e = floor(random(1,1.9));
    if(e == 0){
      regnestykke = ""+b+"/"+a+"+"+d+"/"+c;
      result = ""+((b*c)+(d*a))+"/"+(a*c);
    }else if(e == 1){
      regnestykke = ""+b+"/"+a+"-"+d+"/"+c;
      result = ""+((b*c)-(d*a))+"/"+(a*c);
    }
  }
  
  String[] rOgR = {""+regnestykke,""+result};
  return(rOgR);
}
